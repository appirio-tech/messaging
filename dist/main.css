messaging.widget .messages {
  max-height: 120px; }
messaging.widget form {
  margin-top: 10px; }
  messaging.widget form textarea {
    height: 30px;
    background-color: #E6E1E1; }
  messaging.widget form button.attach {
    display: none; }
  messaging.widget form button.enter {
    float: left;
    width: 100px;
    background-color: blue;
    color: white;
    margin-top: 10px; }

messaging {
  display: block; }
  messaging::after {
    clear: both;
    content: "";
    display: table; }
  messaging .messages {
    max-height: 500px;
    overflow: scroll; }
    messaging .messages > li {
      display: -webkit-box;
      display: -moz-box;
      display: box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-pack: start;
      -moz-box-pack: start;
      box-pack: start;
      -webkit-justify-content: flex-start;
      -moz-justify-content: flex-start;
      -ms-justify-content: flex-start;
      -o-justify-content: flex-start;
      justify-content: flex-start;
      -ms-flex-pack: start;
      -webkit-box-align: center;
      -moz-box-align: center;
      box-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      -ms-align-items: center;
      -o-align-items: center;
      align-items: center;
      -ms-flex-align: center;
      -webkit-box-lines: multiple;
      -moz-box-lines: multiple;
      box-lines: multiple;
      -webkit-flex-wrap: wrap;
      -moz-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
      flex-wrap: wrap;
      -webkit-box-lines: single;
      -moz-box-lines: single;
      box-lines: single;
      -webkit-flex-wrap: nowrap;
      -moz-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
      position: relative;
      padding: 10px 0;
      border-top: 1px solid #ccc; }
      messaging .messages > li avatar {
        min-width: 35px; }
      messaging .messages > li:first-child {
        border-top: 0; }
      messaging .messages > li .message {
        margin-left: 10px; }
        messaging .messages > li .message .attachments li {
          width: 50px;
          height: 40px;
          background-color: purple;
          display: inline-block;
          margin: 5px; }
          messaging .messages > li .message .attachments li:first-child {
            margin-left: 0; }
  messaging form {
    margin-top: 20px; }
    messaging form textarea {
      width: 100%;
      padding: 5px;
      height: 75px;
      border: 0; }
    messaging form .enter, messaging form .attach {
      margin-top: 20px; }
    messaging form button.enter {
      float: left;
      width: 200px;
      background-color: grey;
      color: white; }
    messaging form button.attach {
      float: right;
      background-color: initial; }


/*# sourceMappingURL=data:application/json;base64, */
threads {
  display: block;
  background-color: white; }
  threads ul li {
    border-top: 1px solid #ccc; }
    threads ul li > a {
      display: block;
      padding: 10px 6px; }
      threads ul li > a:hover {
        background-color: #eee; }
    threads ul li::after {
      clear: both;
      content: "";
      display: table; }
    threads ul li:first-child {
      border-top: none; }
    threads ul li header * {
      display: inline-block;
      vertical-align: middle; }
    threads ul li header h4 {
      display: inline-block;
      max-width: 70%;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      word-wrap: normal; }
    threads ul li header time {
      display: inline-block;
      max-width: 30%;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      word-wrap: normal;
      float: right; }
    threads ul li main {
      margin-top: 6px; }
      threads ul li main .notification {
        position: absolute;
        margin-left: 25px;
        margin-top: -4px;
        padding: 2px 4px;
        text-align: center;
        display: inline-block;
        line-height: 14px;
        background-color: red;
        border-radius: 10px;
        font-size: 12px;
        color: white; }
      threads ul li main .message {
        overflow: hidden;
        margin-left: 41px;
        min-height: 35px; }
        threads ul li main .message .co-pilot {
          margin-bottom: 6px; }
        threads ul li main .message p {
          display: inline-block;
          max-width: 100%;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
          word-wrap: normal; }


/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy90aHJlYWRzLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYXBwaXJpby13b3JrLXN0eWxlcy9ub2RlX21vZHVsZXMvbm9kZS1uZWF0L25vZGVfbW9kdWxlcy9ub2RlLWJvdXJib24vbm9kZV9tb2R1bGVzL2JvdXJib24vYXBwL2Fzc2V0cy9zdHlsZXNoZWV0cy9hZGRvbnMvX2NsZWFyZml4LnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYXBwaXJpby13b3JrLXN0eWxlcy9ub2RlX21vZHVsZXMvbm9kZS1uZWF0L25vZGVfbW9kdWxlcy9ub2RlLWJvdXJib24vbm9kZV9tb2R1bGVzL2JvdXJib24vYXBwL2Fzc2V0cy9zdHlsZXNoZWV0cy9hZGRvbnMvX2VsbGlwc2lzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxBQUFTO0VBQ1QsQUFBa0I7RUFHcEIsQUFBUSxBQUFHO0lBWUwsQUFBWTtJQVhsQixBQUFRLEFBQUcsQUFBSztNQUNSLEFBQVM7TUFDVCxBQUFTO01BRWpCLEFBQVEsQUFBRyxBQUFLLEFBQUM7UUFDUCxBQUFrQjtJQ001QixBQUFRLEFBQUcsQUFBRTtNQUNULEFBQU87TUFDUCxBQUFTO01BQ1QsQUFBUztJRERiLEFBQVEsQUFBRyxBQUFFO01BQ0wsQUFBWTtJQUlwQixBQUFRLEFBQUcsQUFBRyxBQUFPO01BQ1gsQUFBUztNQUNULEFBQWdCO0lBRTFCLEFBQVEsQUFBRyxBQUFHLEFBQU87TUVQbkIsQUFBUztNQUNULEFGTzBCO01FTjFCLEFBQVU7TUFDVixBQUFlO01BQ2YsQUFBYTtNQUNiLEFBQVc7SUZNYixBQUFRLEFBQUcsQUFBRyxBQUFPO01FWG5CLEFBQVM7TUFDVCxBRlcwQjtNRVYxQixBQUFVO01BQ1YsQUFBZTtNQUNmLEFBQWE7TUFDYixBQUFXO01GUUgsQUFBTztJQUlqQixBQUFRLEFBQUcsQUFBRztNQUNOLEFBQVk7TUFHcEIsQUFBUSxBQUFHLEFBQUcsQUFBSztRQUNULEFBQVU7UUFDVixBQUFhO1FBQ2IsQUFBWTtRQUNaLEFBQVM7UUFDVCxBQUFZO1FBQ1osQUFBUztRQUNULEFBQWE7UUFDYixBQUFrQjtRQUNsQixBQUFlO1FBQ2YsQUFBVztRQUNYLEFBQU87TUFHakIsQUFBUSxBQUFHLEFBQUcsQUFBSztRQUNULEFBQWE7UUFDYixBQUFhO1FBbEJHLEFBbUJoQjtRQUVWLEFBQVEsQUFBRyxBQUFHLEFBQUssQUFBUztVQUNoQixBQUFlO1FBRzNCLEFBQVEsQUFBRyxBQUFHLEFBQUssQUFBUztVRTVDMUIsQUFBUztVQUNULEFGNEM0QjtVRTNDNUIsQUFBVTtVQUNWLEFBQWU7VUFDZixBQUFhO1VBQ2IsQUFBVyIsImZpbGUiOiJzdHlsZXMvdGhyZWFkcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwid29yay1pbmNsdWRlc1wiO1xuXG50aHJlYWRzIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuXG4gIHVsIHtcbiAgICBsaSB7XG4gICAgICA+IGEge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcGFkZGluZzogMTBweCA2cHg7XG5cbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBAaW5jbHVkZSBjbGVhcmZpeDtcblxuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7XG5cbiAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItdG9wOiBub25lO1xuICAgICAgfVxuXG4gICAgICBoZWFkZXIge1xuICAgICAgICAqIHtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgICAgfVxuICAgICAgICBoNCB7XG4gICAgICAgICAgQGluY2x1ZGUgZWxsaXBzaXMoNzAlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRpbWUge1xuICAgICAgICAgIEBpbmNsdWRlIGVsbGlwc2lzKDMwJSk7XG4gICAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1haW4ge1xuICAgICAgICBtYXJnaW4tdG9wOiA2cHg7XG4gICAgICAgICRhdmF0YXItZGlhbWV0ZXI6IDM1cHg7XG5cbiAgICAgICAgLm5vdGlmaWNhdGlvbiB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAkYXZhdGFyLWRpYW1ldGVyIC0gMTBweDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAtNHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDJweCA0cHg7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgLm1lc3NhZ2Uge1xuICAgICAgICAgIG92ZXJmbG93ICAgOiBoaWRkZW47XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6ICRhdmF0YXItZGlhbWV0ZXIgKyA2cHg7XG4gICAgICAgICAgbWluLWhlaWdodCA6ICRhdmF0YXItZGlhbWV0ZXI7XG5cbiAgICAgICAgICAuY28tcGlsb3Qge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHAge1xuICAgICAgICAgICAgQGluY2x1ZGUgZWxsaXBzaXMoMTAwJSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59IiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLy8gUHJvdmlkZXMgYW4gZWFzeSB3YXkgdG8gaW5jbHVkZSBhIGNsZWFyZml4IGZvciBjb250YWluaW5nIGZsb2F0cy5cbi8vL1xuLy8vIEBsaW5rIGh0dHA6Ly9jc3Ntb2pvLmNvbS9sYXRlc3RfbmV3X2NsZWFyZml4X3NvX2Zhci9cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBjbGVhcmZpeDtcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBPdXRwdXRcbi8vLyAgIC5lbGVtZW50OjphZnRlciB7XG4vLy8gICAgIGNsZWFyOiBib3RoO1xuLy8vICAgICBjb250ZW50OiBcIlwiO1xuLy8vICAgICBkaXNwbGF5OiB0YWJsZTtcbi8vLyAgIH1cblxuQG1peGluIGNsZWFyZml4IHtcbiAgJjo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7XG4gIH1cbn1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIFRydW5jYXRlcyB0ZXh0IGFuZCBhZGRzIGFuIGVsbGlwc2lzIHRvIHJlcHJlc2VudCBvdmVyZmxvdy5cbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkd2lkdGggWzEwMCVdXG4vLy8gICBNYXgtd2lkdGggZm9yIHRoZSBzdHJpbmcgdG8gcmVzcGVjdCBiZWZvcmUgYmVpbmcgdHJ1bmNhdGVkXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVXNhZ2Vcbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgQGluY2x1ZGUgZWxsaXBzaXM7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbi8vLyAgICAgbWF4LXdpZHRoOiAxMDAlO1xuLy8vICAgICBvdmVyZmxvdzogaGlkZGVuO1xuLy8vICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbi8vLyAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbi8vLyAgICAgd29yZC13cmFwOiBub3JtYWw7XG4vLy8gICB9XG5cbkBtaXhpbiBlbGxpcHNpcygkd2lkdGg6IDEwMCUpIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXgtd2lkdGg6ICR3aWR0aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHdvcmQtd3JhcDogbm9ybWFsO1xufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */